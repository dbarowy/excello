import { Primitives as P, CharUtil as CU } from "parsecco";
import { AST } from "./ast";
import { Util } from "./util";
import { Primitives as PP } from "./primitives";

export module ReservedWords {
  const Arity0Names: string[] = [
    "COLUMN",
    "SHEETS",
    "SHEET",
    "TODAY",
    "RAND",
    "NOW",
    "ROW",
    "NA",
    "PI",
  ];

  const Arity1Names: string[] = [
    "CEILING.PRECISE",
    "GAMMALN.PRECISE",
    "FLOOR.PRECISE",
    "CUBESETCOUNT",
    "ERFC.PRECISE",
    "ERF.PRECISE",
    "FORMULATEXT",
    "IMCONJUGATE",
    "ISO.CEILING",
    "NUMBERVALUE",
    "SQL.REQUEST",
    "COUNTBLANK",
    "ERROR.TYPE",
    "FACTDOUBLE",
    "IMARGUMENT",
    "ISOWEEKNUM",
    "NORM.S.INV",
    "SUMPRODUCT",
    "WEBSERVICE",
    "ENCODEURL",
    "FISHERINV",
    "HYPERLINK",
    "IMAGINARY",
    "ISFORMULA",
    "ISLOGICAL",
    "ISNONTEXT",
    "NORMSDIST",
    "TIMEVALUE",
    "TRANSPOSE",
    "BAHTTEXT",
    "ISNUMBER",
    "MINVERSE",
    "NORMSINV",
    "PHONETIC",
    "BIN2DEC",
    "BIN2HEX",
    "BIN2OCT",
    "COLUMNS",
    "DEC2BIN",
    "DEC2HEX",
    "DEC2OCT",
    "DEGREES",
    "GAMMALN",
    "HEX2BIN",
    "HEX2DEC",
    "HEX2OCT",
    "IMLOG10",
    "ISBLANK",
    "ISERROR",
    "MDETERM",
    "MDETERM",
    "MDETERM",
    "OCT2BIN",
    "OCT2DEC",
    "OCT2HEX",
    "PRODUCT",
    "RADIANS",
    "STDEV.P",
    "STDEV.S",
    "STDEVPA",
    "UNICHAR",
    "UNICODE",
    "WEEKDAY",
    "WEEKNUM",
    "ARABIC",
    "COLUMN",
    "DOLLAR",
    "FISHER",
    "GESTEP",
    "GROWTH",
    "IMCOSH",
    "IMCSCH",
    "IMLOG2",
    "IMREAL",
    "IMSECH",
    "IMSINH",
    "IMSQRT",
    "ISEVEN",
    "ISTEXT",
    "LINEST",
    "LOGEST",
    "MEDIAN",
    "MINUTE",
    "PROPER",
    "RIGHTB",
    "SECOND",
    "SHEETS",
    "SKEW.P",
    "SQRTPI",
    "STDEVA",
    "STDEVP",
    "ACOSH",
    "ACOTH",
    "AREAS",
    "ASINH",
    "ATANH",
    "CLEAN",
    "DELTA",
    "FIXED",
    "GAMMA",
    "GAUSS",
    "IMABS",
    "IMCOS",
    "IMCOT",
    "IMCSC",
    "IMEXP",
    "IMSEC",
    "IMSIN",
    "IMTAN",
    "INDEX",
    "ISERR",
    "ISODD",
    "ISREF",
    "LEFTB",
    "LOG10",
    "LOWER",
    "MONTH",
    "MUNIT",
    "RIGHT",
    "ROMAN",
    "SHEET",
    "STDEV",
    "SUMSQ",
    "TREND",
    "TRUNC",
    "UPPER",
    "VALUE",
    "VAR.P",
    "VAR.S",
    "VARPA",
    "ACOS",
    "ACOT",
    "ASIN",
    "ATAN",
    "CELL",
    "CHAR",
    "CODE",
    "COSH",
    "COTH",
    "CSCH",
    "DBCS",
    "ERFC",
    "EVEN",
    "FACT",
    "HOUR",
    "IMLN",
    "INFO",
    "ISNA",
    "LEFT",
    "LENB",
    "ROWS",
    "SECH",
    "SIGN",
    "SINH",
    "SKEW",
    "SQRT",
    "TANH",
    "TRIM",
    "TYPE",
    "VARA",
    "VARP",
    "YEAR",
    "ABS",
    "ASC",
    "COS",
    "COT",
    "CSC",
    "DAY",
    "ERF",
    "EXP",
    "INT",
    "IRR",
    "JIS",
    "LEN",
    "LOG",
    "NOT",
    "ODD",
    "PHI",
    "ROW",
    "SEC",
    "SIN",
    "TAN",
    "VAR",
    "XOR",
    "LN",
    "OR",
    "N",
    "T",
  ];

  const Arity2Names: string[] = [
    "FORECAST.ETS.SEASONALITY",
    "CUBERANKEDMEMBER",
    "NETWORKDAYS.INTL",
    "CEILING.PRECISE",
    "PERCENTRANK.EXC",
    "PERCENTRANK.INC",
    "PERCENTILE.EXC",
    "PERCENTILE.INC",
    "CHISQ.DIST.RT",
    "FLOOR.PRECISE",
    "COVARIANCE.P",
    "COVARIANCE.S",
    "PERMUTATIONA",
    "QUARTILE.EXC",
    "QUARTILE.INC",
    "WORKDAY.INTL",
    "ISO.CEILING",
    "NETWORKDAYS",
    "NORM.S.DIST",
    "NUMBERVALUE",
    "PERCENTRANK",
    "RANDBETWEEN",
    "REGISTER.ID",
    "SQL.REQUEST",
    "CHISQ.TEST",
    "CUBEMEMBER",
    "FVSCHEDULE",
    "PERCENTILE",
    "SUMPRODUCT",
    "TBILLYIELD",
    "AVERAGEIF",
    "BITLSHIFT",
    "BITRSHIFT",
    "DATEVALUE",
    "FILTERXML",
    "FREQUENCY",
    "HYPERLINK",
    "INTERCEPT",
    "ODDFPRICE",
    "ROUNDDOWN",
    "T.DIST.RT",
    "DOLLARDE",
    "DOLLARFR",
    "QUARTILE",
    "QUOTIENT",
    "RANK.AVG",
    "SUBTOTAL",
    "SUMX2MY2",
    "SUMX2PY2",
    "T.INV.2T",
    "TRIMMEAN",
    "YEARFRAC",
    "ADDRESS",
    "BESSELI",
    "BESSELJ",
    "BESSELK",
    "BESSELY",
    "BIN2HEX",
    "BIN2OCT",
    "CEILING",
    "CHIDIST",
    "CHITEST",
    "COMBINA",
    "COMPLEX",
    "COUNTIF",
    "CUBESET",
    "DAYS360",
    "DEC2BIN",
    "DEC2HEX",
    "DEC2OCT",
    "DECIMAL",
    "EOMONTH",
    "HEX2BIN",
    "HEX2OCT",
    "IFERROR",
    "IMPOWER",
    "NOMINAL",
    "OCT2BIN",
    "OCT2DEC",
    "OCT2HEX",
    "PEARSON",
    "PRODUCT",
    "RANK.EQ",
    "ROUNDUP",
    "SEARCHB",
    "STDEV.P",
    "STDEV.S",
    "STDEVPA",
    "SUMXMY2",
    "WEEKDAY",
    "WEEKNUM",
    "WORKDAY",
    "BITAND",
    "BITXOR",
    "CHIINV",
    "COMBIN",
    "DOLLAR",
    "EFFECT",
    "F.DIST",
    "F.TEST",
    "GESTEP",
    "GROWTH",
    "LINEST",
    "LOGEST",
    "LOOKUP",
    "MEDIAN",
    "MROUND",
    "PERMUT",
    "RIGHTB",
    "SEARCH",
    "SKEW.P",
    "STDEVA",
    "STDEVP",
    "Z.TEST",
    "ATAN2",
    "BITOR",
    "COVAR",
    "DELTA",
    "EDATE",
    "EXACT",
    "FINDB",
    "FIXED",
    "FLOOR",
    "FTEST",
    "IMDIV",
    "IMSUB",
    "INDEX",
    "LARGE",
    "LEFTB",
    "MATCH",
    "MMULT",
    "POWER",
    "RIGHT",
    "ROMAN",
    "ROUND",
    "SLOPE",
    "SMALL",
    "STDEV",
    "STEYX",
    "SUMIF",
    "SUMSQ",
    "T.INV",
    "TREND",
    "TRUNC",
    "VAR.P",
    "VAR.S",
    "VARPA",
    "ZTEST",
    "BASE",
    "CELL",
    "DAYS",
    "FIND",
    "IFNA",
    "LEFT",
    "PROB",
    "RANK",
    "REPT",
    "SKEW",
    "TEXT",
    "TINV",
    "VARA",
    "VARP",
    "XIRR",
    "ERF",
    "IRR",
    "LOG",
    "MOD",
    "NPV",
    "RSQ",
    "VAR",
    "XOR",
    "IF",
    "OR",
  ];

  const Arity3Names: string[] = [
    "FORECAST.ETS.SEASONALITY",
    "FORECAST.ETS.CONFINT",
    "CUBEMEMBERPROPERTY",
    "FORECAST.ETS.STAT",
    "BINOM.DIST.RANGE",
    "CUBERANKEDMEMBER",
    "NETWORKDAYS.INTL",
    "CONFIDENCE.NORM",
    "FORECAST.LINEAR",
    "PERCENTRANK.EXC",
    "PERCENTRANK.INC",
    "CUBEKPIMEMBER",
    "CEILING.MATH",
    "CONFIDENCE.T",
    "FORECAST.ETS",
    "NEGBINOMDIST",
    "POISSON.DIST",
    "WORKDAY.INTL",
    "LOGNORM.INV",
    "LOGNORMDIST",
    "MULTINOMIAL",
    "NETWORKDAYS",
    "NUMBERVALUE",
    "PERCENTRANK",
    "REGISTER.ID",
    "SQL.REQUEST",
    "STANDARDIZE",
    "CHISQ.DIST",
    "CONFIDENCE",
    "COUPDAYSNC",
    "CUBEMEMBER",
    "EXPON.DIST",
    "FLOOR.MATH",
    "SUBSTITUTE",
    "SUMPRODUCT",
    "TBILLPRICE",
    "AVERAGEIF",
    "BINOM.INV",
    "COUPDAYBS",
    "CRITBINOM",
    "EXPONDIST",
    "F.DIST.RT",
    "GAMMA.INV",
    "PDURATION",
    "T.DIST.2T",
    "BETA.INV",
    "BETADIST",
    "COUPDAYS",
    "DAVERAGE",
    "DPRODUCT",
    "F.INV.RT",
    "FORECAST",
    "GAMMAINV",
    "NORM.INV",
    "RANK.AVG",
    "SUBTOTAL",
    "TEXTJOIN",
    "YEARFRAC",
    "ADDRESS",
    "BETAINV",
    "COMPLEX",
    "CONVERT",
    "COUPNCD",
    "COUPNUM",
    "COUPPCD",
    "CUBESET",
    "DATEDIF",
    "DAYS360",
    "DCOUNTA",
    "DSTDEVP",
    "HLOOKUP",
    "NORMINV",
    "POISSON",
    "PRODUCT",
    "RANK.EQ",
    "SEARCHB",
    "STDEV.P",
    "STDEV.S",
    "STDEVPA",
    "TBILLEQ",
    "VLOOKUP",
    "WORKDAY",
    "CORREL",
    "DCOUNT",
    "DSTDEV",
    "GROWTH",
    "LINEST",
    "LOGEST",
    "LOGINV",
    "LOOKUP",
    "MEDIAN",
    "OFFSET",
    "SEARCH",
    "SKEW.P",
    "STDEVA",
    "STDEVP",
    "SUMIFS",
    "SWITCH",
    "T.DIST",
    "Z.TEST",
    "DVARP",
    "F.INV",
    "FDIST",
    "FINDB",
    "FIXED",
    "INDEX",
    "MATCH",
    "STDEV",
    "SUMIF",
    "SUMSQ",
    "TDIST",
    "TREND",
    "VAR.P",
    "VAR.S",
    "VARPA",
    "ZTEST",
    "BASE",
    "DATE",
    "DGET",
    "DMAX",
    "DMIN",
    "DSUM",
    "DVAR",
    "FIND",
    "FINV",
    "MIDB",
    "MIRR",
    "NPER",
    "PROB",
    "RANK",
    "RATE",
    "SKEW",
    "TIME",
    "VARA",
    "VARP",
    "XIRR",
    "XNPV",
    "MID",
    "NPV",
    "PMT",
    "RRI",
    "RTD",
    "SLN",
    "VAR",
    "XOR",
    "FV",
    "IF",
    "OR",
    "PV",
  ];

  const Arity4Names: string[] = [
    "FORECAST.ETS.SEASONALITY",
    "FORECAST.ETS.CONFINT",
    "FORECAST.ETS.STAT",
    "BINOM.DIST.RANGE",
    "NETWORKDAYS.INTL",
    "NEGBINOM.DIST",
    "FORECAST.ETS",
    "LOGNORM.DIST",
    "WEIBULL.DIST",
    "WORKDAY.INTL",
    "HYPGEOMDIST",
    "SQL.REQUEST",
    "BINOM.DIST",
    "COUPDAYSNC",
    "GAMMA.DIST",
    "SUBSTITUTE",
    "SUMPRODUCT",
    "BETA.DIST",
    "BINOMDIST",
    "COUPDAYBS",
    "GAMMADIST",
    "NORM.DIST",
    "PRICEDISC",
    "SERIESSUM",
    "YIELDDISC",
    "ACCRINTM",
    "BETA.INV",
    "BETADIST",
    "COUPDAYS",
    "NORMDIST",
    "PRICEMAT",
    "RECEIVED",
    "REPLACEB",
    "SUBTOTAL",
    "TEXTJOIN",
    "ADDRESS",
    "BETAINV",
    "COUPNCD",
    "COUPNUM",
    "COUPPCD",
    "CUBESET",
    "HLOOKUP",
    "INTRATE",
    "PRODUCT",
    "REPLACE",
    "STDEV.P",
    "STDEV.S",
    "STDEVPA",
    "VLOOKUP",
    "WEIBULL",
    "F.DIST",
    "GROWTH",
    "LINEST",
    "LOGEST",
    "MEDIAN",
    "OFFSET",
    "SKEW.P",
    "STDEVA",
    "STDEVP",
    "SWITCH",
    "T.TEST",
    "ISPMT",
    "STDEV",
    "SUMSQ",
    "TREND",
    "TTEST",
    "VAR.P",
    "VAR.S",
    "VARPA",
    "DISC",
    "IPMT",
    "NPER",
    "PPMT",
    "PROB",
    "RATE",
    "SKEW",
    "VARA",
    "VARP",
    "DDB",
    "NPV",
    "PMT",
    "RTD",
    "SYD",
    "VAR",
    "XOR",
    "DB",
    "FV",
    "OR",
    "PV",
  ];

  const Arity5Names = [
    "FORECAST.ETS.CONFINT",
    "FORECAST.ETS.STAT",
    "FORECAST.ETS",
    "HYPGEOM.DIST",
    "EUROCONVERT",
    "SQL.REQUEST",
    "SUMPRODUCT",
    "BETA.DIST",
    "MDURATION",
    "MDURATION",
    "PRICEDISC",
    "YIELDDISC",
    "ACCRINTM",
    "BETA.INV",
    "BETADIST",
    "DURATION",
    "PRICEMAT",
    "RECEIVED",
    "SUBTOTAL",
    "TEXTJOIN",
    "YIELDMAT",
    "ADDRESS",
    "BETAINV",
    "CUBESET",
    "INTRATE",
    "PRODUCT",
    "STDEV.P",
    "STDEV.S",
    "STDEVPA",
    "MEDIAN",
    "OFFSET",
    "SKEW.P",
    "STDEVA",
    "STDEVP",
    "SUMIFS",
    "SWITCH",
    "STDEV",
    "SUMSQ",
    "VAR.P",
    "VARPA",
    "DISC",
    "IPMT",
    "NPER",
    "PPMT",
    "RATE",
    "SKEW",
    "VARA",
    "VARP",
    "DDB",
    "NPV",
    "PMT",
    "RTD",
    "VAR",
    "VDB",
    "XOR",
    "DB",
    "FV",
    "OR",
    "PV",
  ];

  const Arity6Names: string[] = [
    "FORECAST.ETS.CONFINT",
    "FORECAST.ETS.STAT",
    "FORECAST.ETS",
    "SUMPRODUCT",
    "AMORDEGRC",
    "BETA.DIST",
    "MDURATION",
    "MDURATION",
    "AMORLINC",
    "CUMPRINC",
    "DURATION",
    "SUBTOTAL",
    "TEXTJOIN",
    "YIELDMAT",
    "ACCRINT",
    "CUMIPMT",
    "PRODUCT",
    "STDEV.P",
    "STDEV.S",
    "STDEVPA",
    "MEDIAN",
    "SKEW.P",
    "STDEVA",
    "STDEVP",
    "SWITCH",
    "PRICE",
    "STDEV",
    "SUMSQ",
    "VAR.P",
    "VAR.S",
    "VARPA",
    "YIELD",
    "IPMT",
    "PPMT",
    "RATE",
    "SKEW",
    "VARA",
    "VARP",
    "NPV",
    "RTD",
    "VAR",
    "VDB",
    "XOR",
    "OR",
  ];

  const Arity7Names: string[] = [
    "FORECAST.ETS.CONFINT",
    "MULTINOMIAL",
    "SUMPRODUCT",
    "AMORDEGRC",
    "ODDLPRICE",
    "ODDLYIELD",
    "AMORLINC",
    "SUBTOTAL",
    "TEXTJOIN",
    "ACCRINT",
    "PRODUCT",
    "STDEV.P",
    "STDEV.S",
    "STDEVPA",
    "MEDIAN",
    "STDEVA",
    "STDEVP",
    "SUMIFS",
    "SWITCH",
    "PRICE",
    "STDEV",
    "SUMSQ",
    "VAR.P",
    "VAR.S",
    "VARPA",
    "YIELD",
    "VARA",
    "VARP",
    "NPV",
    "RTD",
    "VAR",
    "VDB",
    "XOR",
    "OR",
  ];

  const Arity8Names: string[] = [
    "MULTINOMIAL",
    "SUMPRODUCT",
    "ODDFPRICE",
    "ODDFYIELD",
    "ODDLPRICE",
    "ODDLYIELD",
    "SUBTOTAL",
    "TEXTJOIN",
    "ACCRINT",
    "PRODUCT",
    "STDEV.P",
    "STDEV.S",
    "STDEVPA",
    "MEDIAN",
    "STDEVA",
    "STDEVP",
    "SWITCH",
    "STDEV",
    "SUMSQ",
    "VAR.P",
    "VAR.S",
    "VARPA",
    "VARA",
    "VARP",
    "NPV",
    "RTD",
    "VAR",
    "XOR",
    "OR",
  ];

  const Arity9Names: string[] = [
    "MULTINOMIAL",
    "SUMPRODUCT",
    "ODDFPRICE",
    "ODDFYIELD",
    "SUBTOTAL",
    "ACCRINT",
    "PRODUCT",
    "STDEV.P",
    "STDEV.S",
    "STDEVPA",
    "MEDIAN",
    "STDEVA",
    "STDEVP",
    "SWITCH",
    "STDEV",
    "SUMSQ",
    "VAR.P",
    "VAR.S",
    "VARPA",
    "VARA",
    "VARP",
    "NPV",
    "RTD",
    "VAR",
    "XOR",
    "OR",
  ];

  const ArityAtLeast1Names: string[] = [
    "CONCATENATE",
    "MULTINOMIAL",
    "CUBEVALUE",
    "IMPRODUCT",
    "MODE.MULT",
    "MODE.SNGL",
    "AVERAGEA",
    "AVERAGE",
    "GEOMEAN",
    "HARMEAN",
    "AVEDEV",
    "CONCAT",
    "COUNTA",
    "COUNT",
    "DEVSQ",
    "IMSUM",
    "CALL",
    "KURT",
    "MAXA",
    "MINA",
    "MODE",
    "AND",
    "GCD",
    "LCM",
    "MAX",
    "MIN",
  ];

  const ArityAtLeast2Names: string[] = [
    "GETPIVOTDATA",
    "COUNTIFS",
    "CHOOSE",
    "IFS",
  ];

  const ArityAtLeast3Names: string[] = [
    "AVERAGEIFS",
    "AGGREGATE",
    "MAXIFS",
    "MINIFS",
  ];

  const VarArgsNames: string[] = ["SUM"];

  /**
   * Parses function names that take no arguments.
   */
  export const arity0FunctionName = Util.strAlternatives(Arity0Names);

  /**
   * Parses function names that take one arguments.
   */
  export const arity1FunctionName = Util.strAlternatives(Arity1Names);

  /**
   * Parses function names that take two arguments.
   */
  export const arity2FunctionName = Util.strAlternatives(Arity2Names);

  /**
   * Parses function names that take three arguments.
   */
  export const arity3FunctionName = Util.strAlternatives(Arity3Names);

  /**
   * Parses function names that take four arguments.
   */
  export const arity4FunctionName = Util.strAlternatives(Arity4Names);

  /**
   * Parses function names that take five arguments.
   */
  export const arity5FunctionName = Util.strAlternatives(Arity5Names);

  /**
   * Parses function names that take six arguments.
   */
  export const arity6FunctionName = Util.strAlternatives(Arity6Names);

  /**
   * Parses function names that take seven arguments.
   */
  export const arity7FunctionName = Util.strAlternatives(Arity7Names);

  /**
   * Parses function names that take eight arguments.
   */
  export const arity8FunctionName = Util.strAlternatives(Arity8Names);

  /**
   * Parses function names that take nine arguments.
   */
  export const arity9FunctionName = Util.strAlternatives(Arity9Names);

  /**
   * Parses function names that take at least one argument.
   */
  export const arityAtLeast1FunctionName = Util.strAlternatives(
    ArityAtLeast1Names
  );

  /**
   * Parses function names that take at least two arguments.
   */
  export const arityAtLeast2FunctionName = Util.strAlternatives(
    ArityAtLeast2Names
  );

  /**
   * Parses function names that take at least three arguments.
   */
  export const arityAtLeast3FunctionName = Util.strAlternatives(
    ArityAtLeast3Names
  );

  /**
   * Parses function names that take any number of arguments.
   */
  export const varArgsFunctionName = Util.strAlternatives(VarArgsNames);

  /**
   * Fails if any reserved word is encountered, succeeds otherwise.
   * Never consumes input.
   */
  export const reservedWord: P.IParser<AST.ReferenceExpr> = P.fail(
    // the poison pill generic type parameter
    // is purely so that this parser returns
    // a type that is a "reference".
    P.pipe<CU.CharStream, AST.PoisonPill>(
      P.choices(
        arity0FunctionName,
        arity1FunctionName,
        arity2FunctionName,
        arity3FunctionName,
        arity4FunctionName,
        arity5FunctionName,
        arity6FunctionName,
        arity7FunctionName,
        arity8FunctionName,
        arity9FunctionName,
        arityAtLeast1FunctionName,
        arityAtLeast2FunctionName,
        arityAtLeast3FunctionName,
        varArgsFunctionName
      )
    )((cs) => new AST.PoisonPill(PP.EnvStub))
  )("Cannot parse a reserved word.") as P.IParser<AST.ReferenceExpr>;

  /**
   * An array of all fixed-arity function parsers, indexed by arity.
   */
  export const arityNNameArray: P.IParser<CU.CharStream>[] = [
    arity0FunctionName,
    arity1FunctionName,
    arity2FunctionName,
    arity3FunctionName,
    arity4FunctionName,
    arity5FunctionName,
    arity6FunctionName,
    arity7FunctionName,
    arity8FunctionName,
    arity9FunctionName,
  ];

  /**
   * An array of all "at least"-arity function parsers, indexed by minimum arity.
   */
  export const arityAtLeastNNameArray: P.IParser<CU.CharStream>[] = [
    // NOTE: "ArityAtLeast0" is just VarArgs
    arityAtLeast1FunctionName,
    arityAtLeast2FunctionName,
    arityAtLeast3FunctionName,
  ];

  /**
   * Returns a function name parser for all functions of fixed arity n.
   * @param n Arity.
   */
  export function arityNName(n: number): P.IParser<CU.CharStream> {
    return arityNNameArray[n];
  }

  /**
   * Returns a function name parser for all functions of at least arity n.
   * @param n Arity.
   */
  export function arityAtLeastNName(n: number): P.IParser<CU.CharStream> {
    return arityAtLeastNNameArray[n - 1];
  }
}
